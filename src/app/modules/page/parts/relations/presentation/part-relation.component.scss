/**
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
.part-relation--button-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  right: 32px;
  background: white;
  border-radius: 20%;
  @apply shadow;
}
.part-relation--minimap {
  position: absolute;
  right: 5px;
  top: 5px;

  border: 1px solid black;
  background-color: white;
}

.part-relation--container {
  height: 100%;
}

.tree--element {
  min-width: 100%;
  height: auto;
  cursor: grab;

  &__grabbing {
    cursor: grabbing;
  }

  &__path {
    stroke: #555;
    stroke-opacity: 0.4;
    stroke-width: 1.5;
    fill: none;
  }

  &__circle {
    @apply fill-white;
    -webkit-filter: drop-shadow(0px 3px 8px rgba(0, 0, 0, 0.24));
    filter: drop-shadow(0px 3px 8px rgba(0, 0, 0, 0.24));
  }

  &__border {
    &-loading {
      @apply stroke-primary;
      @apply fill-primary;

      &-0 {
        animation: TreeElementLoadingAnimation01 2.5s ease-in-out infinite;
      }

      &-1 {
        animation: TreeElementLoadingAnimation02 2.5s ease-in-out infinite;
      }

      &-2 {
        animation: TreeElementLoadingAnimation03 2.5s ease-in-out infinite;
      }
    }

    & > path {
      animation: TreeElementLoadingAnimation 45s infinite linear;
    }

    &-done {
      @apply fill-success;
    }

    &-Minor {
      @apply fill-primaryLight;
    }

    &-Major {
      @apply fill-primaryDark;
    }

    &-Critical {
      @apply fill-dangerLight;
    }

    &-LifeThreatening {
      fill: #981b5e;
    }
  }

  &__arrow-container {
    @apply text-primary;
    -webkit-filter: drop-shadow(0px 3px 8px rgba(0, 0, 0, 0.24));
    filter: drop-shadow(0px 3px 8px rgba(0, 0, 0, 0.24));

    &:hover {
      @apply text-primaryDark;
    }
  }

  &__arrow {
    fill: currentColor;
  }

  &__text {
    white-space: pre;
    user-select: none;
    text-anchor: middle;
    font-size: 16px;
    font-weight: bold;

    overflow: hidden;
    text-overflow: ellipsis;
    font-family: 'Catena-X Regular', monospace;
  }

  &__closing {
    &-text {
      font-size: 25px;
      @apply fill-white;
    }

    &-circle {
      @apply fill-primary;
    }

    &-animation {
      transition: transform 0.5s;
    }

    &:hover > .tree--element__closing-animation {
      transform: scale(1.5) translate(5px, 0);
    }

    &:hover > .tree--element__closing-circle {
      @apply fill-primaryDark;
    }
  }
}

.loading-stuff {
  transform-origin: center;
  animation: animation 1.2 cubic-bezier(0.25, 0.46, 0.45, 0.94), infinite;
}

@keyframes animation {
  0% {
    stroke-dasharray: 1 98;
    stroke-dashoffset: -105;
  }
  50% {
    stroke-dasharray: 80 10;
    stroke-dashoffset: -160;
  }
  100% {
    stroke-dasharray: 1 98;
    stroke-dashoffset: -300;
  }
}

@keyframes TreeElementLoadingAnimation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes TreeElementLoadingAnimation01 {
  0% {
    transform: rotate(300deg);
  }
  60% {
    transform: rotate(660deg);
  }
  60%,
  100% {
    transform: rotate(660deg);
  }
}

@keyframes TreeElementLoadingAnimation02 {
  0%,
  35% {
    transform: rotate(180deg);
  }
  35% {
    transform: rotate(180deg);
  }
  80% {
    transform: rotate(540deg);
  }
  80%,
  100% {
    transform: rotate(540deg);
  }
}

@keyframes TreeElementLoadingAnimation03 {
  0%,
  55% {
    transform: rotate(60deg);
  }
  55% {
    transform: rotate(60deg);
  }
  100% {
    transform: rotate(420deg);
  }
}
